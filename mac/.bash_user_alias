#export
export GOROOT=/usr/local/opt/go/libexec
export GOPATH=/Users/junjie/go
export GO111MODULE=on
export PATH=$PATH:$GOPATH/bin:$GOROOT/bin

#alias
alias ..='cd ..'
alias git='export LANG=en_US.UTF-8 && export LANGUAGE=en_US && git'
alias gb='git br'
alias gd='~/conf/script/git_diff.sh'
alias hd='~/conf/script/hg_diff.sh'
alias gdl='gd HEAD~1 HEAD'
alias gs='git st'
alias gc='git co'
alias gm='git merge --no-ff'
alias fdate="\date +'%Y-%m-%d %H:%M:%S'"
alias grep='grep -n -I --color=always --exclude-dir=.hg --exclude-dir=.git --exclude-dir=.svn'
alias less='less -r'
alias pss="ps aux | grep"
alias du1="du -d 1 -h"
alias dus="du -d 0 -h"
alias gi='git add --all ./`git rev-parse --show-cdup` && git ci -a'
alias gia='gi --amend'
alias f='((L=$LINES-3)); ((L=L>10?L:10)); \tail -n $L -f'
alias terror="f ~/www/ss/logs/ss.global.dev.exception.json"
alias idea-proxy="docker run -d -p 8800:8888 --restart=always -d --name idea-proxy ilanyu/golang-reverseproxy"
alias idea-proxy-start="docker start idea-proxy"
alias services='brew services'

dssh () {
	if [[ -z "$2" ]]; then
      	echo "Usage: $0 <d|r> <docker-id>"
      	return 1
    fi

    if [[ "$1" != "d" ]] && [[ "$1" != "r" ]]; then
      	echo "第一个参数必须是d或者r"
      	return 1
    fi

	if [[ "$1" == "d" ]]; then
	  	HOST="ssd-ssh-dev-$2.kingsgroup.cc"
	else
	  	HOST="ssd-ssh-release-$2.kingsgroup.cc"
	fi

    ssh ${HOST} "ls | grep -q bash"

    if [ $? -ne 0 ]; then
        scp -r ~/conf/bash ${HOST}:/root/
        if [ $? -ne 0 ]; then
        	echo "scp bash 失败"
            ssh ${HOST} "rm -fr bash"
            return 1
        fi
        ssh ${HOST} "cd bash && ./link.sh"
    fi

    ssh ${HOST}
}

dscp () {
	if [[ -z "$3" ]]; then
      	echo "Usage: $0 <d|r> <docker-id> <file>"
      	return 1
    fi

    if [[ "$1" != "d" ]] && [[ "$1" != "r" ]]; then
      	echo "第一个参数必须是d或者r"
      	return 1
    fi

	if [[ "$1" == "d" ]]; then
	  	HOST="ssd-ssh-dev-$2.kingsgroup.cc"
	else
	  	HOST="ssd-ssh-release-$2.kingsgroup.cc"
	fi

	echo "scp $3 ${HOST}:/root/"

    scp $3 ${HOST}:/root/
}

function topgrep() {
    if [[ $# -ne 1 ]]; then
        echo "Usage: topgrep <expression>"
    else
        top -pid `pgrep -o $1`
    fi
}

